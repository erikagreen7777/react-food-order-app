[{"/Users/erika/code/foodOrderApp/src/index.js":"1","/Users/erika/code/foodOrderApp/src/App.js":"2","/Users/erika/code/foodOrderApp/src/components/Layout/Header.js":"3","/Users/erika/code/foodOrderApp/src/components/Layout/HeaderCartButton.js":"4","/Users/erika/code/foodOrderApp/src/components/Cart/CartIcon.js":"5","/Users/erika/code/foodOrderApp/src/components/Meals/Meals.js":"6","/Users/erika/code/foodOrderApp/src/components/Meals/MealsSummary.js":"7","/Users/erika/code/foodOrderApp/src/components/Meals/AvailableMeals.js":"8","/Users/erika/code/foodOrderApp/src/components/UI/Card.js":"9","/Users/erika/code/foodOrderApp/src/components/Meals/MealItem/MealItem.js":"10","/Users/erika/code/foodOrderApp/src/components/Meals/MealItem/MealItemForm.js":"11","/Users/erika/code/foodOrderApp/src/components/UI/Input.js":"12","/Users/erika/code/foodOrderApp/src/components/Cart/Cart.js":"13","/Users/erika/code/foodOrderApp/src/components/UI/Modal.js":"14","/Users/erika/code/foodOrderApp/src/store/CartProvider.js":"15","/Users/erika/code/foodOrderApp/src/store/cart-context.js":"16","/Users/erika/code/foodOrderApp/src/components/Cart/CartItem.js":"17"},{"size":179,"mtime":1648642748000,"results":"18","hashOfConfig":"19"},{"size":732,"mtime":1663762708103,"results":"20","hashOfConfig":"19"},{"size":546,"mtime":1663761986409,"results":"21","hashOfConfig":"19"},{"size":1130,"mtime":1663857523178,"results":"22","hashOfConfig":"19"},{"size":511,"mtime":1663674568538,"results":"23","hashOfConfig":"19"},{"size":200,"mtime":1663675382518,"results":"24","hashOfConfig":"19"},{"size":529,"mtime":1663675439212,"results":"25","hashOfConfig":"19"},{"size":971,"mtime":1663679503893,"results":"26","hashOfConfig":"19"},{"size":146,"mtime":1663676420873,"results":"27","hashOfConfig":"19"},{"size":812,"mtime":1663849136021,"results":"28","hashOfConfig":"19"},{"size":1123,"mtime":1663848814966,"results":"29","hashOfConfig":"19"},{"size":286,"mtime":1663847993793,"results":"30","hashOfConfig":"19"},{"size":1382,"mtime":1663856959202,"results":"31","hashOfConfig":"19"},{"size":750,"mtime":1663762167351,"results":"32","hashOfConfig":"19"},{"size":2400,"mtime":1663856931016,"results":"33","hashOfConfig":"19"},{"size":283,"mtime":1663762453191,"results":"34","hashOfConfig":"19"},{"size":612,"mtime":1663855503103,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"1d3cu3w",{"filePath":"39","messages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"38"},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"38"},{"filePath":"71","messages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"/Users/erika/code/foodOrderApp/src/index.js",[],["73","74"],"/Users/erika/code/foodOrderApp/src/App.js",[],"/Users/erika/code/foodOrderApp/src/components/Layout/Header.js",[],"/Users/erika/code/foodOrderApp/src/components/Layout/HeaderCartButton.js",[],"/Users/erika/code/foodOrderApp/src/components/Cart/CartIcon.js",[],"/Users/erika/code/foodOrderApp/src/components/Meals/Meals.js",[],"/Users/erika/code/foodOrderApp/src/components/Meals/MealsSummary.js",[],"/Users/erika/code/foodOrderApp/src/components/Meals/AvailableMeals.js",[],"/Users/erika/code/foodOrderApp/src/components/UI/Card.js",[],"/Users/erika/code/foodOrderApp/src/components/Meals/MealItem/MealItem.js",[],"/Users/erika/code/foodOrderApp/src/components/Meals/MealItem/MealItemForm.js",[],"/Users/erika/code/foodOrderApp/src/components/UI/Input.js",[],"/Users/erika/code/foodOrderApp/src/components/Cart/Cart.js",[],"/Users/erika/code/foodOrderApp/src/components/UI/Modal.js",[],"/Users/erika/code/foodOrderApp/src/store/CartProvider.js",["75"],"import Cart from \"../components/Cart/Cart\";\nimport CartContext from \"./cart-context\";\nimport { useReducer } from \"react\";\n\nconst defaultCartState = {\n  items: [],\n  totalAmount: 0,\n};\n\nconst cartReducer = (state, action) => {\n  if (action.type === \"ADD\") {\n    const updatedTotalAmount =\n      state.totalAmount + action.item.price * action.item.amount;\n\n    const existingCartItemIndex = state.items.findIndex(\n      (item) => item.id === action.item.id\n    );\n\n    const existingCartItem = state.items[existingCartItemIndex];\n\n    let updatedItems;\n\n    if (existingCartItem) {\n      const updatedItem = {\n        ...existingCartItem,\n        amount: existingCartItem.amount + action.item.amount,\n      };\n      updatedItems = [...state.items];\n      updatedItems[existingCartItemIndex] = updatedItem;\n    } else {\n      updatedItems = state.items.concat(action.item);\n    }\n\n    return {\n      items: updatedItems,\n      totalAmount: updatedTotalAmount,\n    };\n  }\n\n  if (action.type === \"REMOVE\") {\n    const existingCartItemIndex = state.items.findIndex(\n      (item) => item.id === action.id\n    );\n    const existingItem = state.items[existingCartItemIndex];\n\n    const updatedTotalAmount = state.totalAmount - existingItem.price;\n    let updatedItems;\n    if (existingItem.amount === 1) {\n      updatedItems = state.items.filter((item) => item.id !== action.id);\n    } else {\n      const updatedItem = { ...existingItem, amount: existingItem.amount - 1 };\n      updatedItems = [...state.items];\n      updatedItems[existingCartItemIndex] = updatedItem;\n    }\n    return {\n      items: updatedItems,\n      totalAmount: updatedTotalAmount,\n    };\n  }\n\n  return defaultCartState;\n};\n//manage cart data and provide context for all the app\nconst CartProvider = (props) => {\n  const [cartState, dispatchCartAction] = useReducer(\n    cartReducer,\n    defaultCartState\n  );\n  const addItemToCartHander = (item) => {\n    dispatchCartAction({ type: \"ADD\", item: item });\n  };\n\n  const removeItemFromCartHandler = (id) => {\n    dispatchCartAction({ type: \"REMOVE\", id: id });\n  };\n\n  const cartContext = {\n    items: cartState.items,\n    totalAmount: cartState.totalAmount,\n    addItem: addItemToCartHander,\n    removeItem: removeItemFromCartHandler,\n  };\n\n  return (\n    <CartContext.Provider value={cartContext}>\n      {props.children}\n    </CartContext.Provider>\n  );\n};\n\nexport default CartProvider;\n","/Users/erika/code/foodOrderApp/src/store/cart-context.js",["76"],"//store folder is convention for storing state\nimport React from \"react\";\nimport Cart from \"../components/Cart/Cart\";\n\nconst CartContext =  React.createContext({\n    items: [],\n    totalAmount: 0,\n    addItem: (item) => {},\n    removeItem: (id) => {}\n});\n\nexport default CartContext\n","/Users/erika/code/foodOrderApp/src/components/Cart/CartItem.js",[],{"ruleId":"77","replacedBy":"78"},{"ruleId":"79","replacedBy":"80"},{"ruleId":"81","severity":1,"message":"82","line":1,"column":8,"nodeType":"83","messageId":"84","endLine":1,"endColumn":12},{"ruleId":"81","severity":1,"message":"82","line":3,"column":8,"nodeType":"83","messageId":"84","endLine":3,"endColumn":12},"no-native-reassign",["85"],"no-negated-in-lhs",["86"],"no-unused-vars","'Cart' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]